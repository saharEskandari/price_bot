# -*- coding: utf-8 -*-
"""Untitled76.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Kc3S-Q3m7Ps3gJcfAsk1-8qp4jlL6g0-
"""

TOKEN = "7702743601:AAEZ1pbvamYx7A-omTRNicK5fs3c_YFl7QI"
import requests
from bs4 import BeautifulSoup

url = "https://www.tgju.org/profile/price_dollar_rl"

headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
}

response = requests.get(url, headers=headers)
soup = BeautifulSoup(response.text, "html.parser")

price_element = soup.find("td", class_="text-left")
if price_element:
    price = price_element.text.strip()
    print(f"💵 قیمت لحظه‌ای دلار: {price} تومان")
else:
    print("❌ قیمت پیدا نشد")


import requests
import asyncio
from flask import Flask
from bs4 import BeautifulSoup
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext


# سرور Flask برای جلوگیری از خوابیدن Render
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is running!"

async def get_dollar_price():
    url = "https://www.tgju.org/profile/price_dollar_rl"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(url, headers=headers)
    soup = BeautifulSoup(response.text, "html.parser")

    price_element = soup.find("td", class_="text-left")
    return price_element.text.strip() if price_element else "❌ قیمت پیدا نشد"

async def start(update: Update, context: CallbackContext) -> None:
    await update.message.reply_text("سلام! برای دریافت قیمت دلار از دستور /price استفاده کنید.")

async def price(update: Update, context: CallbackContext) -> None:
    price = await get_dollar_price()
    await update.message.reply_text(f"💵 قیمت لحظه‌ای دلار: {price} ریال")

async def main():
    app_telegram = Application.builder().token(TOKEN).build()
    app_telegram.add_handler(CommandHandler("start", start))
    app_telegram.add_handler(CommandHandler("price", price))

    loop = asyncio.get_event_loop()
    loop.create_task(keep_alive())  # فعال نگه داشتن سرور
    print("🤖 Bot is running...")

    await app_telegram.run_polling()

# اجرای سرور Flask
if __name__ == "__main__":
    from threading import Thread
    Thread(target=lambda: app.run(host="0.0.0.0", port=5000)).start()
    asyncio.run(main())

